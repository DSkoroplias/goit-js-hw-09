{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,yBAKxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbT,EAAKC,OAAOgB,iBAAiB,UAgB7B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOrB,EAAKI,aAAakB,OACtCC,EAAYF,OAAOrB,EAAKK,YAAYiB,OACpCE,EAAcH,OAAOrB,EAAKM,cAAcgB,OAE5C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EACpClB,EAAckB,EAAI,EAAGA,EAAIL,EAAaG,GACnCG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAIrDS,EAAIc,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayInputEl: document.querySelector('input[name=\"delay\"]'),\n  stepInputEl: document.querySelector('input[name=\"step\"]'),\n  amountInputEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(refs.delayInputEl.value);\n  let stepValue = Number(refs.stepInputEl.value);\n  let amountValue = Number(refs.amountInputEl.value);\n\n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(i + 1, i * delayValue + stepValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  evt.target.reset();\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayInputEl","stepInputEl","amountInputEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.9de8537b.js.map"}